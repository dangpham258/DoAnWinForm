//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace Presentation {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("SkylineDataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class SkylineDataSet : global::System.Data.DataSet {
        
        private Table_CrewDatabaseDataTable tableTable_CrewDatabase;
        
        private Table_FlightInfoDatabaseDataTable tableTable_FlightInfoDatabase;
        
        private Table_TicketDatabaseDataTable tableTable_TicketDatabase;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public SkylineDataSet() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected SkylineDataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["Table_CrewDatabase"] != null)) {
                    base.Tables.Add(new Table_CrewDatabaseDataTable(ds.Tables["Table_CrewDatabase"]));
                }
                if ((ds.Tables["Table_FlightInfoDatabase"] != null)) {
                    base.Tables.Add(new Table_FlightInfoDatabaseDataTable(ds.Tables["Table_FlightInfoDatabase"]));
                }
                if ((ds.Tables["Table_TicketDatabase"] != null)) {
                    base.Tables.Add(new Table_TicketDatabaseDataTable(ds.Tables["Table_TicketDatabase"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Table_CrewDatabaseDataTable Table_CrewDatabase {
            get {
                return this.tableTable_CrewDatabase;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Table_FlightInfoDatabaseDataTable Table_FlightInfoDatabase {
            get {
                return this.tableTable_FlightInfoDatabase;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Table_TicketDatabaseDataTable Table_TicketDatabase {
            get {
                return this.tableTable_TicketDatabase;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            SkylineDataSet cln = ((SkylineDataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["Table_CrewDatabase"] != null)) {
                    base.Tables.Add(new Table_CrewDatabaseDataTable(ds.Tables["Table_CrewDatabase"]));
                }
                if ((ds.Tables["Table_FlightInfoDatabase"] != null)) {
                    base.Tables.Add(new Table_FlightInfoDatabaseDataTable(ds.Tables["Table_FlightInfoDatabase"]));
                }
                if ((ds.Tables["Table_TicketDatabase"] != null)) {
                    base.Tables.Add(new Table_TicketDatabaseDataTable(ds.Tables["Table_TicketDatabase"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableTable_CrewDatabase = ((Table_CrewDatabaseDataTable)(base.Tables["Table_CrewDatabase"]));
            if ((initTable == true)) {
                if ((this.tableTable_CrewDatabase != null)) {
                    this.tableTable_CrewDatabase.InitVars();
                }
            }
            this.tableTable_FlightInfoDatabase = ((Table_FlightInfoDatabaseDataTable)(base.Tables["Table_FlightInfoDatabase"]));
            if ((initTable == true)) {
                if ((this.tableTable_FlightInfoDatabase != null)) {
                    this.tableTable_FlightInfoDatabase.InitVars();
                }
            }
            this.tableTable_TicketDatabase = ((Table_TicketDatabaseDataTable)(base.Tables["Table_TicketDatabase"]));
            if ((initTable == true)) {
                if ((this.tableTable_TicketDatabase != null)) {
                    this.tableTable_TicketDatabase.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitClass() {
            this.DataSetName = "SkylineDataSet";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/SkylineDataSet.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableTable_CrewDatabase = new Table_CrewDatabaseDataTable();
            base.Tables.Add(this.tableTable_CrewDatabase);
            this.tableTable_FlightInfoDatabase = new Table_FlightInfoDatabaseDataTable();
            base.Tables.Add(this.tableTable_FlightInfoDatabase);
            this.tableTable_TicketDatabase = new Table_TicketDatabaseDataTable();
            base.Tables.Add(this.tableTable_TicketDatabase);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private bool ShouldSerializeTable_CrewDatabase() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private bool ShouldSerializeTable_FlightInfoDatabase() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private bool ShouldSerializeTable_TicketDatabase() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            SkylineDataSet ds = new SkylineDataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public delegate void Table_CrewDatabaseRowChangeEventHandler(object sender, Table_CrewDatabaseRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public delegate void Table_FlightInfoDatabaseRowChangeEventHandler(object sender, Table_FlightInfoDatabaseRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public delegate void Table_TicketDatabaseRowChangeEventHandler(object sender, Table_TicketDatabaseRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Table_CrewDatabaseDataTable : global::System.Data.TypedTableBase<Table_CrewDatabaseRow> {
            
            private global::System.Data.DataColumn columnPersonID;
            
            private global::System.Data.DataColumn columnUserName;
            
            private global::System.Data.DataColumn columnPassword;
            
            private global::System.Data.DataColumn columnJobType;
            
            private global::System.Data.DataColumn columnYearsOfExperience;
            
            private global::System.Data.DataColumn columnPhoneNumber;
            
            private global::System.Data.DataColumn columnFullName;
            
            private global::System.Data.DataColumn columnCCCD;
            
            private global::System.Data.DataColumn columnStatus;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public Table_CrewDatabaseDataTable() {
                this.TableName = "Table_CrewDatabase";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal Table_CrewDatabaseDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected Table_CrewDatabaseDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn PersonIDColumn {
                get {
                    return this.columnPersonID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn UserNameColumn {
                get {
                    return this.columnUserName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn PasswordColumn {
                get {
                    return this.columnPassword;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn JobTypeColumn {
                get {
                    return this.columnJobType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn YearsOfExperienceColumn {
                get {
                    return this.columnYearsOfExperience;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn PhoneNumberColumn {
                get {
                    return this.columnPhoneNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn FullNameColumn {
                get {
                    return this.columnFullName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn CCCDColumn {
                get {
                    return this.columnCCCD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn StatusColumn {
                get {
                    return this.columnStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public Table_CrewDatabaseRow this[int index] {
                get {
                    return ((Table_CrewDatabaseRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event Table_CrewDatabaseRowChangeEventHandler Table_CrewDatabaseRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event Table_CrewDatabaseRowChangeEventHandler Table_CrewDatabaseRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event Table_CrewDatabaseRowChangeEventHandler Table_CrewDatabaseRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event Table_CrewDatabaseRowChangeEventHandler Table_CrewDatabaseRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void AddTable_CrewDatabaseRow(Table_CrewDatabaseRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public Table_CrewDatabaseRow AddTable_CrewDatabaseRow(string UserName, string Password, string JobType, int YearsOfExperience, string PhoneNumber, string FullName, string CCCD, int Status) {
                Table_CrewDatabaseRow rowTable_CrewDatabaseRow = ((Table_CrewDatabaseRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        UserName,
                        Password,
                        JobType,
                        YearsOfExperience,
                        PhoneNumber,
                        FullName,
                        CCCD,
                        Status};
                rowTable_CrewDatabaseRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowTable_CrewDatabaseRow);
                return rowTable_CrewDatabaseRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public Table_CrewDatabaseRow FindByPersonID(int PersonID) {
                return ((Table_CrewDatabaseRow)(this.Rows.Find(new object[] {
                            PersonID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                Table_CrewDatabaseDataTable cln = ((Table_CrewDatabaseDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new Table_CrewDatabaseDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal void InitVars() {
                this.columnPersonID = base.Columns["PersonID"];
                this.columnUserName = base.Columns["UserName"];
                this.columnPassword = base.Columns["Password"];
                this.columnJobType = base.Columns["JobType"];
                this.columnYearsOfExperience = base.Columns["YearsOfExperience"];
                this.columnPhoneNumber = base.Columns["PhoneNumber"];
                this.columnFullName = base.Columns["FullName"];
                this.columnCCCD = base.Columns["CCCD"];
                this.columnStatus = base.Columns["Status"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            private void InitClass() {
                this.columnPersonID = new global::System.Data.DataColumn("PersonID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPersonID);
                this.columnUserName = new global::System.Data.DataColumn("UserName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUserName);
                this.columnPassword = new global::System.Data.DataColumn("Password", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPassword);
                this.columnJobType = new global::System.Data.DataColumn("JobType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJobType);
                this.columnYearsOfExperience = new global::System.Data.DataColumn("YearsOfExperience", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnYearsOfExperience);
                this.columnPhoneNumber = new global::System.Data.DataColumn("PhoneNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPhoneNumber);
                this.columnFullName = new global::System.Data.DataColumn("FullName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFullName);
                this.columnCCCD = new global::System.Data.DataColumn("CCCD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCCCD);
                this.columnStatus = new global::System.Data.DataColumn("Status", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStatus);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnPersonID}, true));
                this.columnPersonID.AutoIncrement = true;
                this.columnPersonID.AutoIncrementSeed = -1;
                this.columnPersonID.AutoIncrementStep = -1;
                this.columnPersonID.AllowDBNull = false;
                this.columnPersonID.ReadOnly = true;
                this.columnPersonID.Unique = true;
                this.columnUserName.AllowDBNull = false;
                this.columnUserName.MaxLength = 50;
                this.columnPassword.AllowDBNull = false;
                this.columnPassword.MaxLength = 100;
                this.columnJobType.AllowDBNull = false;
                this.columnJobType.MaxLength = 50;
                this.columnYearsOfExperience.AllowDBNull = false;
                this.columnPhoneNumber.AllowDBNull = false;
                this.columnPhoneNumber.MaxLength = 20;
                this.columnFullName.AllowDBNull = false;
                this.columnFullName.MaxLength = 100;
                this.columnCCCD.AllowDBNull = false;
                this.columnCCCD.MaxLength = 20;
                this.columnStatus.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public Table_CrewDatabaseRow NewTable_CrewDatabaseRow() {
                return ((Table_CrewDatabaseRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new Table_CrewDatabaseRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(Table_CrewDatabaseRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Table_CrewDatabaseRowChanged != null)) {
                    this.Table_CrewDatabaseRowChanged(this, new Table_CrewDatabaseRowChangeEvent(((Table_CrewDatabaseRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Table_CrewDatabaseRowChanging != null)) {
                    this.Table_CrewDatabaseRowChanging(this, new Table_CrewDatabaseRowChangeEvent(((Table_CrewDatabaseRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Table_CrewDatabaseRowDeleted != null)) {
                    this.Table_CrewDatabaseRowDeleted(this, new Table_CrewDatabaseRowChangeEvent(((Table_CrewDatabaseRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Table_CrewDatabaseRowDeleting != null)) {
                    this.Table_CrewDatabaseRowDeleting(this, new Table_CrewDatabaseRowChangeEvent(((Table_CrewDatabaseRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void RemoveTable_CrewDatabaseRow(Table_CrewDatabaseRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                SkylineDataSet ds = new SkylineDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Table_CrewDatabaseDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Table_FlightInfoDatabaseDataTable : global::System.Data.TypedTableBase<Table_FlightInfoDatabaseRow> {
            
            private global::System.Data.DataColumn columnFlightID;
            
            private global::System.Data.DataColumn columnFlightNumber;
            
            private global::System.Data.DataColumn columnAirline;
            
            private global::System.Data.DataColumn columnDepartCode;
            
            private global::System.Data.DataColumn columnArriveCode;
            
            private global::System.Data.DataColumn columnDepartureDate;
            
            private global::System.Data.DataColumn columnArrivalDate;
            
            private global::System.Data.DataColumn columnPilotID;
            
            private global::System.Data.DataColumn columnPilotName;
            
            private global::System.Data.DataColumn columnCoPilotID;
            
            private global::System.Data.DataColumn columnCoPilotName;
            
            private global::System.Data.DataColumn columnAttendantID;
            
            private global::System.Data.DataColumn columnAttendantName;
            
            private global::System.Data.DataColumn columnPassengerCount;
            
            private global::System.Data.DataColumn columnG1;
            
            private global::System.Data.DataColumn columnG2;
            
            private global::System.Data.DataColumn columnG3;
            
            private global::System.Data.DataColumn columnG4;
            
            private global::System.Data.DataColumn columnG5;
            
            private global::System.Data.DataColumn columnG6;
            
            private global::System.Data.DataColumn columnG7;
            
            private global::System.Data.DataColumn columnG8;
            
            private global::System.Data.DataColumn columnG9;
            
            private global::System.Data.DataColumn columnG10;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public Table_FlightInfoDatabaseDataTable() {
                this.TableName = "Table_FlightInfoDatabase";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal Table_FlightInfoDatabaseDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected Table_FlightInfoDatabaseDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn FlightIDColumn {
                get {
                    return this.columnFlightID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn FlightNumberColumn {
                get {
                    return this.columnFlightNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn AirlineColumn {
                get {
                    return this.columnAirline;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn DepartCodeColumn {
                get {
                    return this.columnDepartCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ArriveCodeColumn {
                get {
                    return this.columnArriveCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn DepartureDateColumn {
                get {
                    return this.columnDepartureDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ArrivalDateColumn {
                get {
                    return this.columnArrivalDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn PilotIDColumn {
                get {
                    return this.columnPilotID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn PilotNameColumn {
                get {
                    return this.columnPilotName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn CoPilotIDColumn {
                get {
                    return this.columnCoPilotID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn CoPilotNameColumn {
                get {
                    return this.columnCoPilotName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn AttendantIDColumn {
                get {
                    return this.columnAttendantID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn AttendantNameColumn {
                get {
                    return this.columnAttendantName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn PassengerCountColumn {
                get {
                    return this.columnPassengerCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn G1Column {
                get {
                    return this.columnG1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn G2Column {
                get {
                    return this.columnG2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn G3Column {
                get {
                    return this.columnG3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn G4Column {
                get {
                    return this.columnG4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn G5Column {
                get {
                    return this.columnG5;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn G6Column {
                get {
                    return this.columnG6;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn G7Column {
                get {
                    return this.columnG7;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn G8Column {
                get {
                    return this.columnG8;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn G9Column {
                get {
                    return this.columnG9;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn G10Column {
                get {
                    return this.columnG10;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public Table_FlightInfoDatabaseRow this[int index] {
                get {
                    return ((Table_FlightInfoDatabaseRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event Table_FlightInfoDatabaseRowChangeEventHandler Table_FlightInfoDatabaseRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event Table_FlightInfoDatabaseRowChangeEventHandler Table_FlightInfoDatabaseRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event Table_FlightInfoDatabaseRowChangeEventHandler Table_FlightInfoDatabaseRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event Table_FlightInfoDatabaseRowChangeEventHandler Table_FlightInfoDatabaseRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void AddTable_FlightInfoDatabaseRow(Table_FlightInfoDatabaseRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public Table_FlightInfoDatabaseRow AddTable_FlightInfoDatabaseRow(
                        string FlightNumber, 
                        string Airline, 
                        string DepartCode, 
                        string ArriveCode, 
                        System.DateTime DepartureDate, 
                        System.DateTime ArrivalDate, 
                        int PilotID, 
                        string PilotName, 
                        int CoPilotID, 
                        string CoPilotName, 
                        int AttendantID, 
                        string AttendantName, 
                        int PassengerCount, 
                        bool G1, 
                        bool G2, 
                        bool G3, 
                        bool G4, 
                        bool G5, 
                        bool G6, 
                        bool G7, 
                        bool G8, 
                        bool G9, 
                        bool G10) {
                Table_FlightInfoDatabaseRow rowTable_FlightInfoDatabaseRow = ((Table_FlightInfoDatabaseRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        FlightNumber,
                        Airline,
                        DepartCode,
                        ArriveCode,
                        DepartureDate,
                        ArrivalDate,
                        PilotID,
                        PilotName,
                        CoPilotID,
                        CoPilotName,
                        AttendantID,
                        AttendantName,
                        PassengerCount,
                        G1,
                        G2,
                        G3,
                        G4,
                        G5,
                        G6,
                        G7,
                        G8,
                        G9,
                        G10};
                rowTable_FlightInfoDatabaseRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowTable_FlightInfoDatabaseRow);
                return rowTable_FlightInfoDatabaseRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public Table_FlightInfoDatabaseRow FindByFlightID(int FlightID) {
                return ((Table_FlightInfoDatabaseRow)(this.Rows.Find(new object[] {
                            FlightID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                Table_FlightInfoDatabaseDataTable cln = ((Table_FlightInfoDatabaseDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new Table_FlightInfoDatabaseDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal void InitVars() {
                this.columnFlightID = base.Columns["FlightID"];
                this.columnFlightNumber = base.Columns["FlightNumber"];
                this.columnAirline = base.Columns["Airline"];
                this.columnDepartCode = base.Columns["DepartCode"];
                this.columnArriveCode = base.Columns["ArriveCode"];
                this.columnDepartureDate = base.Columns["DepartureDate"];
                this.columnArrivalDate = base.Columns["ArrivalDate"];
                this.columnPilotID = base.Columns["PilotID"];
                this.columnPilotName = base.Columns["PilotName"];
                this.columnCoPilotID = base.Columns["CoPilotID"];
                this.columnCoPilotName = base.Columns["CoPilotName"];
                this.columnAttendantID = base.Columns["AttendantID"];
                this.columnAttendantName = base.Columns["AttendantName"];
                this.columnPassengerCount = base.Columns["PassengerCount"];
                this.columnG1 = base.Columns["G1"];
                this.columnG2 = base.Columns["G2"];
                this.columnG3 = base.Columns["G3"];
                this.columnG4 = base.Columns["G4"];
                this.columnG5 = base.Columns["G5"];
                this.columnG6 = base.Columns["G6"];
                this.columnG7 = base.Columns["G7"];
                this.columnG8 = base.Columns["G8"];
                this.columnG9 = base.Columns["G9"];
                this.columnG10 = base.Columns["G10"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            private void InitClass() {
                this.columnFlightID = new global::System.Data.DataColumn("FlightID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFlightID);
                this.columnFlightNumber = new global::System.Data.DataColumn("FlightNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFlightNumber);
                this.columnAirline = new global::System.Data.DataColumn("Airline", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAirline);
                this.columnDepartCode = new global::System.Data.DataColumn("DepartCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDepartCode);
                this.columnArriveCode = new global::System.Data.DataColumn("ArriveCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnArriveCode);
                this.columnDepartureDate = new global::System.Data.DataColumn("DepartureDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDepartureDate);
                this.columnArrivalDate = new global::System.Data.DataColumn("ArrivalDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnArrivalDate);
                this.columnPilotID = new global::System.Data.DataColumn("PilotID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPilotID);
                this.columnPilotName = new global::System.Data.DataColumn("PilotName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPilotName);
                this.columnCoPilotID = new global::System.Data.DataColumn("CoPilotID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCoPilotID);
                this.columnCoPilotName = new global::System.Data.DataColumn("CoPilotName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCoPilotName);
                this.columnAttendantID = new global::System.Data.DataColumn("AttendantID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAttendantID);
                this.columnAttendantName = new global::System.Data.DataColumn("AttendantName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAttendantName);
                this.columnPassengerCount = new global::System.Data.DataColumn("PassengerCount", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPassengerCount);
                this.columnG1 = new global::System.Data.DataColumn("G1", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnG1);
                this.columnG2 = new global::System.Data.DataColumn("G2", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnG2);
                this.columnG3 = new global::System.Data.DataColumn("G3", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnG3);
                this.columnG4 = new global::System.Data.DataColumn("G4", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnG4);
                this.columnG5 = new global::System.Data.DataColumn("G5", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnG5);
                this.columnG6 = new global::System.Data.DataColumn("G6", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnG6);
                this.columnG7 = new global::System.Data.DataColumn("G7", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnG7);
                this.columnG8 = new global::System.Data.DataColumn("G8", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnG8);
                this.columnG9 = new global::System.Data.DataColumn("G9", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnG9);
                this.columnG10 = new global::System.Data.DataColumn("G10", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnG10);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnFlightID}, true));
                this.columnFlightID.AutoIncrement = true;
                this.columnFlightID.AutoIncrementSeed = -1;
                this.columnFlightID.AutoIncrementStep = -1;
                this.columnFlightID.AllowDBNull = false;
                this.columnFlightID.ReadOnly = true;
                this.columnFlightID.Unique = true;
                this.columnFlightNumber.AllowDBNull = false;
                this.columnFlightNumber.MaxLength = 20;
                this.columnAirline.AllowDBNull = false;
                this.columnAirline.MaxLength = 100;
                this.columnDepartCode.AllowDBNull = false;
                this.columnDepartCode.MaxLength = 10;
                this.columnArriveCode.AllowDBNull = false;
                this.columnArriveCode.MaxLength = 10;
                this.columnDepartureDate.AllowDBNull = false;
                this.columnArrivalDate.AllowDBNull = false;
                this.columnPilotName.MaxLength = 100;
                this.columnCoPilotName.MaxLength = 100;
                this.columnAttendantName.MaxLength = 100;
                this.columnPassengerCount.AllowDBNull = false;
                this.columnG1.AllowDBNull = false;
                this.columnG2.AllowDBNull = false;
                this.columnG3.AllowDBNull = false;
                this.columnG4.AllowDBNull = false;
                this.columnG5.AllowDBNull = false;
                this.columnG6.AllowDBNull = false;
                this.columnG7.AllowDBNull = false;
                this.columnG8.AllowDBNull = false;
                this.columnG9.AllowDBNull = false;
                this.columnG10.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public Table_FlightInfoDatabaseRow NewTable_FlightInfoDatabaseRow() {
                return ((Table_FlightInfoDatabaseRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new Table_FlightInfoDatabaseRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(Table_FlightInfoDatabaseRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Table_FlightInfoDatabaseRowChanged != null)) {
                    this.Table_FlightInfoDatabaseRowChanged(this, new Table_FlightInfoDatabaseRowChangeEvent(((Table_FlightInfoDatabaseRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Table_FlightInfoDatabaseRowChanging != null)) {
                    this.Table_FlightInfoDatabaseRowChanging(this, new Table_FlightInfoDatabaseRowChangeEvent(((Table_FlightInfoDatabaseRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Table_FlightInfoDatabaseRowDeleted != null)) {
                    this.Table_FlightInfoDatabaseRowDeleted(this, new Table_FlightInfoDatabaseRowChangeEvent(((Table_FlightInfoDatabaseRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Table_FlightInfoDatabaseRowDeleting != null)) {
                    this.Table_FlightInfoDatabaseRowDeleting(this, new Table_FlightInfoDatabaseRowChangeEvent(((Table_FlightInfoDatabaseRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void RemoveTable_FlightInfoDatabaseRow(Table_FlightInfoDatabaseRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                SkylineDataSet ds = new SkylineDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Table_FlightInfoDatabaseDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Table_TicketDatabaseDataTable : global::System.Data.TypedTableBase<Table_TicketDatabaseRow> {
            
            private global::System.Data.DataColumn columnTicketID;
            
            private global::System.Data.DataColumn columnFlightNumber;
            
            private global::System.Data.DataColumn columnAirline;
            
            private global::System.Data.DataColumn columnDepartCode;
            
            private global::System.Data.DataColumn columnArriveCode;
            
            private global::System.Data.DataColumn columnDepartureDate;
            
            private global::System.Data.DataColumn columnArrivalDate;
            
            private global::System.Data.DataColumn columnClassType;
            
            private global::System.Data.DataColumn columnSeatNumber;
            
            private global::System.Data.DataColumn columnPrice;
            
            private global::System.Data.DataColumn columnPhoneNumber;
            
            private global::System.Data.DataColumn columnFullName;
            
            private global::System.Data.DataColumn columnCCCD;
            
            private global::System.Data.DataColumn columnStatus;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public Table_TicketDatabaseDataTable() {
                this.TableName = "Table_TicketDatabase";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal Table_TicketDatabaseDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected Table_TicketDatabaseDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn TicketIDColumn {
                get {
                    return this.columnTicketID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn FlightNumberColumn {
                get {
                    return this.columnFlightNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn AirlineColumn {
                get {
                    return this.columnAirline;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn DepartCodeColumn {
                get {
                    return this.columnDepartCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ArriveCodeColumn {
                get {
                    return this.columnArriveCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn DepartureDateColumn {
                get {
                    return this.columnDepartureDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ArrivalDateColumn {
                get {
                    return this.columnArrivalDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ClassTypeColumn {
                get {
                    return this.columnClassType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn SeatNumberColumn {
                get {
                    return this.columnSeatNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn PriceColumn {
                get {
                    return this.columnPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn PhoneNumberColumn {
                get {
                    return this.columnPhoneNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn FullNameColumn {
                get {
                    return this.columnFullName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn CCCDColumn {
                get {
                    return this.columnCCCD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn StatusColumn {
                get {
                    return this.columnStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public Table_TicketDatabaseRow this[int index] {
                get {
                    return ((Table_TicketDatabaseRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event Table_TicketDatabaseRowChangeEventHandler Table_TicketDatabaseRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event Table_TicketDatabaseRowChangeEventHandler Table_TicketDatabaseRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event Table_TicketDatabaseRowChangeEventHandler Table_TicketDatabaseRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event Table_TicketDatabaseRowChangeEventHandler Table_TicketDatabaseRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void AddTable_TicketDatabaseRow(Table_TicketDatabaseRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public Table_TicketDatabaseRow AddTable_TicketDatabaseRow(string FlightNumber, string Airline, string DepartCode, string ArriveCode, System.DateTime DepartureDate, System.DateTime ArrivalDate, string ClassType, string SeatNumber, int Price, string PhoneNumber, string FullName, string CCCD, int Status) {
                Table_TicketDatabaseRow rowTable_TicketDatabaseRow = ((Table_TicketDatabaseRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        FlightNumber,
                        Airline,
                        DepartCode,
                        ArriveCode,
                        DepartureDate,
                        ArrivalDate,
                        ClassType,
                        SeatNumber,
                        Price,
                        PhoneNumber,
                        FullName,
                        CCCD,
                        Status};
                rowTable_TicketDatabaseRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowTable_TicketDatabaseRow);
                return rowTable_TicketDatabaseRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public Table_TicketDatabaseRow FindByTicketID(int TicketID) {
                return ((Table_TicketDatabaseRow)(this.Rows.Find(new object[] {
                            TicketID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                Table_TicketDatabaseDataTable cln = ((Table_TicketDatabaseDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new Table_TicketDatabaseDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal void InitVars() {
                this.columnTicketID = base.Columns["TicketID"];
                this.columnFlightNumber = base.Columns["FlightNumber"];
                this.columnAirline = base.Columns["Airline"];
                this.columnDepartCode = base.Columns["DepartCode"];
                this.columnArriveCode = base.Columns["ArriveCode"];
                this.columnDepartureDate = base.Columns["DepartureDate"];
                this.columnArrivalDate = base.Columns["ArrivalDate"];
                this.columnClassType = base.Columns["ClassType"];
                this.columnSeatNumber = base.Columns["SeatNumber"];
                this.columnPrice = base.Columns["Price"];
                this.columnPhoneNumber = base.Columns["PhoneNumber"];
                this.columnFullName = base.Columns["FullName"];
                this.columnCCCD = base.Columns["CCCD"];
                this.columnStatus = base.Columns["Status"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            private void InitClass() {
                this.columnTicketID = new global::System.Data.DataColumn("TicketID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTicketID);
                this.columnFlightNumber = new global::System.Data.DataColumn("FlightNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFlightNumber);
                this.columnAirline = new global::System.Data.DataColumn("Airline", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAirline);
                this.columnDepartCode = new global::System.Data.DataColumn("DepartCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDepartCode);
                this.columnArriveCode = new global::System.Data.DataColumn("ArriveCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnArriveCode);
                this.columnDepartureDate = new global::System.Data.DataColumn("DepartureDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDepartureDate);
                this.columnArrivalDate = new global::System.Data.DataColumn("ArrivalDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnArrivalDate);
                this.columnClassType = new global::System.Data.DataColumn("ClassType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClassType);
                this.columnSeatNumber = new global::System.Data.DataColumn("SeatNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSeatNumber);
                this.columnPrice = new global::System.Data.DataColumn("Price", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPrice);
                this.columnPhoneNumber = new global::System.Data.DataColumn("PhoneNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPhoneNumber);
                this.columnFullName = new global::System.Data.DataColumn("FullName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFullName);
                this.columnCCCD = new global::System.Data.DataColumn("CCCD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCCCD);
                this.columnStatus = new global::System.Data.DataColumn("Status", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStatus);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnTicketID}, true));
                this.columnTicketID.AutoIncrement = true;
                this.columnTicketID.AutoIncrementSeed = -1;
                this.columnTicketID.AutoIncrementStep = -1;
                this.columnTicketID.AllowDBNull = false;
                this.columnTicketID.ReadOnly = true;
                this.columnTicketID.Unique = true;
                this.columnFlightNumber.AllowDBNull = false;
                this.columnFlightNumber.MaxLength = 20;
                this.columnAirline.AllowDBNull = false;
                this.columnAirline.MaxLength = 100;
                this.columnDepartCode.AllowDBNull = false;
                this.columnDepartCode.MaxLength = 10;
                this.columnArriveCode.AllowDBNull = false;
                this.columnArriveCode.MaxLength = 10;
                this.columnDepartureDate.AllowDBNull = false;
                this.columnArrivalDate.AllowDBNull = false;
                this.columnClassType.AllowDBNull = false;
                this.columnClassType.MaxLength = 50;
                this.columnSeatNumber.AllowDBNull = false;
                this.columnSeatNumber.MaxLength = 10;
                this.columnPrice.AllowDBNull = false;
                this.columnPhoneNumber.AllowDBNull = false;
                this.columnPhoneNumber.MaxLength = 20;
                this.columnFullName.AllowDBNull = false;
                this.columnFullName.MaxLength = 100;
                this.columnCCCD.AllowDBNull = false;
                this.columnCCCD.MaxLength = 20;
                this.columnStatus.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public Table_TicketDatabaseRow NewTable_TicketDatabaseRow() {
                return ((Table_TicketDatabaseRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new Table_TicketDatabaseRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(Table_TicketDatabaseRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Table_TicketDatabaseRowChanged != null)) {
                    this.Table_TicketDatabaseRowChanged(this, new Table_TicketDatabaseRowChangeEvent(((Table_TicketDatabaseRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Table_TicketDatabaseRowChanging != null)) {
                    this.Table_TicketDatabaseRowChanging(this, new Table_TicketDatabaseRowChangeEvent(((Table_TicketDatabaseRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Table_TicketDatabaseRowDeleted != null)) {
                    this.Table_TicketDatabaseRowDeleted(this, new Table_TicketDatabaseRowChangeEvent(((Table_TicketDatabaseRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Table_TicketDatabaseRowDeleting != null)) {
                    this.Table_TicketDatabaseRowDeleting(this, new Table_TicketDatabaseRowChangeEvent(((Table_TicketDatabaseRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void RemoveTable_TicketDatabaseRow(Table_TicketDatabaseRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                SkylineDataSet ds = new SkylineDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Table_TicketDatabaseDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class Table_CrewDatabaseRow : global::System.Data.DataRow {
            
            private Table_CrewDatabaseDataTable tableTable_CrewDatabase;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal Table_CrewDatabaseRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTable_CrewDatabase = ((Table_CrewDatabaseDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int PersonID {
                get {
                    return ((int)(this[this.tableTable_CrewDatabase.PersonIDColumn]));
                }
                set {
                    this[this.tableTable_CrewDatabase.PersonIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string UserName {
                get {
                    return ((string)(this[this.tableTable_CrewDatabase.UserNameColumn]));
                }
                set {
                    this[this.tableTable_CrewDatabase.UserNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Password {
                get {
                    return ((string)(this[this.tableTable_CrewDatabase.PasswordColumn]));
                }
                set {
                    this[this.tableTable_CrewDatabase.PasswordColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string JobType {
                get {
                    return ((string)(this[this.tableTable_CrewDatabase.JobTypeColumn]));
                }
                set {
                    this[this.tableTable_CrewDatabase.JobTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int YearsOfExperience {
                get {
                    return ((int)(this[this.tableTable_CrewDatabase.YearsOfExperienceColumn]));
                }
                set {
                    this[this.tableTable_CrewDatabase.YearsOfExperienceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string PhoneNumber {
                get {
                    return ((string)(this[this.tableTable_CrewDatabase.PhoneNumberColumn]));
                }
                set {
                    this[this.tableTable_CrewDatabase.PhoneNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string FullName {
                get {
                    return ((string)(this[this.tableTable_CrewDatabase.FullNameColumn]));
                }
                set {
                    this[this.tableTable_CrewDatabase.FullNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string CCCD {
                get {
                    return ((string)(this[this.tableTable_CrewDatabase.CCCDColumn]));
                }
                set {
                    this[this.tableTable_CrewDatabase.CCCDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int Status {
                get {
                    return ((int)(this[this.tableTable_CrewDatabase.StatusColumn]));
                }
                set {
                    this[this.tableTable_CrewDatabase.StatusColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class Table_FlightInfoDatabaseRow : global::System.Data.DataRow {
            
            private Table_FlightInfoDatabaseDataTable tableTable_FlightInfoDatabase;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal Table_FlightInfoDatabaseRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTable_FlightInfoDatabase = ((Table_FlightInfoDatabaseDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int FlightID {
                get {
                    return ((int)(this[this.tableTable_FlightInfoDatabase.FlightIDColumn]));
                }
                set {
                    this[this.tableTable_FlightInfoDatabase.FlightIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string FlightNumber {
                get {
                    return ((string)(this[this.tableTable_FlightInfoDatabase.FlightNumberColumn]));
                }
                set {
                    this[this.tableTable_FlightInfoDatabase.FlightNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Airline {
                get {
                    return ((string)(this[this.tableTable_FlightInfoDatabase.AirlineColumn]));
                }
                set {
                    this[this.tableTable_FlightInfoDatabase.AirlineColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string DepartCode {
                get {
                    return ((string)(this[this.tableTable_FlightInfoDatabase.DepartCodeColumn]));
                }
                set {
                    this[this.tableTable_FlightInfoDatabase.DepartCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string ArriveCode {
                get {
                    return ((string)(this[this.tableTable_FlightInfoDatabase.ArriveCodeColumn]));
                }
                set {
                    this[this.tableTable_FlightInfoDatabase.ArriveCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime DepartureDate {
                get {
                    return ((global::System.DateTime)(this[this.tableTable_FlightInfoDatabase.DepartureDateColumn]));
                }
                set {
                    this[this.tableTable_FlightInfoDatabase.DepartureDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime ArrivalDate {
                get {
                    return ((global::System.DateTime)(this[this.tableTable_FlightInfoDatabase.ArrivalDateColumn]));
                }
                set {
                    this[this.tableTable_FlightInfoDatabase.ArrivalDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int PilotID {
                get {
                    try {
                        return ((int)(this[this.tableTable_FlightInfoDatabase.PilotIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PilotID\' in table \'Table_FlightInfoDatabase\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTable_FlightInfoDatabase.PilotIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string PilotName {
                get {
                    try {
                        return ((string)(this[this.tableTable_FlightInfoDatabase.PilotNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PilotName\' in table \'Table_FlightInfoDatabase\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTable_FlightInfoDatabase.PilotNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int CoPilotID {
                get {
                    try {
                        return ((int)(this[this.tableTable_FlightInfoDatabase.CoPilotIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CoPilotID\' in table \'Table_FlightInfoDatabase\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTable_FlightInfoDatabase.CoPilotIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string CoPilotName {
                get {
                    try {
                        return ((string)(this[this.tableTable_FlightInfoDatabase.CoPilotNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CoPilotName\' in table \'Table_FlightInfoDatabase\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableTable_FlightInfoDatabase.CoPilotNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int AttendantID {
                get {
                    try {
                        return ((int)(this[this.tableTable_FlightInfoDatabase.AttendantIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AttendantID\' in table \'Table_FlightInfoDatabase\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableTable_FlightInfoDatabase.AttendantIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string AttendantName {
                get {
                    try {
                        return ((string)(this[this.tableTable_FlightInfoDatabase.AttendantNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AttendantName\' in table \'Table_FlightInfoDatabase\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableTable_FlightInfoDatabase.AttendantNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int PassengerCount {
                get {
                    return ((int)(this[this.tableTable_FlightInfoDatabase.PassengerCountColumn]));
                }
                set {
                    this[this.tableTable_FlightInfoDatabase.PassengerCountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool G1 {
                get {
                    return ((bool)(this[this.tableTable_FlightInfoDatabase.G1Column]));
                }
                set {
                    this[this.tableTable_FlightInfoDatabase.G1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool G2 {
                get {
                    return ((bool)(this[this.tableTable_FlightInfoDatabase.G2Column]));
                }
                set {
                    this[this.tableTable_FlightInfoDatabase.G2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool G3 {
                get {
                    return ((bool)(this[this.tableTable_FlightInfoDatabase.G3Column]));
                }
                set {
                    this[this.tableTable_FlightInfoDatabase.G3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool G4 {
                get {
                    return ((bool)(this[this.tableTable_FlightInfoDatabase.G4Column]));
                }
                set {
                    this[this.tableTable_FlightInfoDatabase.G4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool G5 {
                get {
                    return ((bool)(this[this.tableTable_FlightInfoDatabase.G5Column]));
                }
                set {
                    this[this.tableTable_FlightInfoDatabase.G5Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool G6 {
                get {
                    return ((bool)(this[this.tableTable_FlightInfoDatabase.G6Column]));
                }
                set {
                    this[this.tableTable_FlightInfoDatabase.G6Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool G7 {
                get {
                    return ((bool)(this[this.tableTable_FlightInfoDatabase.G7Column]));
                }
                set {
                    this[this.tableTable_FlightInfoDatabase.G7Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool G8 {
                get {
                    return ((bool)(this[this.tableTable_FlightInfoDatabase.G8Column]));
                }
                set {
                    this[this.tableTable_FlightInfoDatabase.G8Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool G9 {
                get {
                    return ((bool)(this[this.tableTable_FlightInfoDatabase.G9Column]));
                }
                set {
                    this[this.tableTable_FlightInfoDatabase.G9Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool G10 {
                get {
                    return ((bool)(this[this.tableTable_FlightInfoDatabase.G10Column]));
                }
                set {
                    this[this.tableTable_FlightInfoDatabase.G10Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsPilotIDNull() {
                return this.IsNull(this.tableTable_FlightInfoDatabase.PilotIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetPilotIDNull() {
                this[this.tableTable_FlightInfoDatabase.PilotIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsPilotNameNull() {
                return this.IsNull(this.tableTable_FlightInfoDatabase.PilotNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetPilotNameNull() {
                this[this.tableTable_FlightInfoDatabase.PilotNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsCoPilotIDNull() {
                return this.IsNull(this.tableTable_FlightInfoDatabase.CoPilotIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetCoPilotIDNull() {
                this[this.tableTable_FlightInfoDatabase.CoPilotIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsCoPilotNameNull() {
                return this.IsNull(this.tableTable_FlightInfoDatabase.CoPilotNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetCoPilotNameNull() {
                this[this.tableTable_FlightInfoDatabase.CoPilotNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsAttendantIDNull() {
                return this.IsNull(this.tableTable_FlightInfoDatabase.AttendantIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetAttendantIDNull() {
                this[this.tableTable_FlightInfoDatabase.AttendantIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsAttendantNameNull() {
                return this.IsNull(this.tableTable_FlightInfoDatabase.AttendantNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetAttendantNameNull() {
                this[this.tableTable_FlightInfoDatabase.AttendantNameColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class Table_TicketDatabaseRow : global::System.Data.DataRow {
            
            private Table_TicketDatabaseDataTable tableTable_TicketDatabase;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal Table_TicketDatabaseRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTable_TicketDatabase = ((Table_TicketDatabaseDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int TicketID {
                get {
                    return ((int)(this[this.tableTable_TicketDatabase.TicketIDColumn]));
                }
                set {
                    this[this.tableTable_TicketDatabase.TicketIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string FlightNumber {
                get {
                    return ((string)(this[this.tableTable_TicketDatabase.FlightNumberColumn]));
                }
                set {
                    this[this.tableTable_TicketDatabase.FlightNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Airline {
                get {
                    return ((string)(this[this.tableTable_TicketDatabase.AirlineColumn]));
                }
                set {
                    this[this.tableTable_TicketDatabase.AirlineColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string DepartCode {
                get {
                    return ((string)(this[this.tableTable_TicketDatabase.DepartCodeColumn]));
                }
                set {
                    this[this.tableTable_TicketDatabase.DepartCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string ArriveCode {
                get {
                    return ((string)(this[this.tableTable_TicketDatabase.ArriveCodeColumn]));
                }
                set {
                    this[this.tableTable_TicketDatabase.ArriveCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime DepartureDate {
                get {
                    return ((global::System.DateTime)(this[this.tableTable_TicketDatabase.DepartureDateColumn]));
                }
                set {
                    this[this.tableTable_TicketDatabase.DepartureDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime ArrivalDate {
                get {
                    return ((global::System.DateTime)(this[this.tableTable_TicketDatabase.ArrivalDateColumn]));
                }
                set {
                    this[this.tableTable_TicketDatabase.ArrivalDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string ClassType {
                get {
                    return ((string)(this[this.tableTable_TicketDatabase.ClassTypeColumn]));
                }
                set {
                    this[this.tableTable_TicketDatabase.ClassTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string SeatNumber {
                get {
                    return ((string)(this[this.tableTable_TicketDatabase.SeatNumberColumn]));
                }
                set {
                    this[this.tableTable_TicketDatabase.SeatNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int Price {
                get {
                    return ((int)(this[this.tableTable_TicketDatabase.PriceColumn]));
                }
                set {
                    this[this.tableTable_TicketDatabase.PriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string PhoneNumber {
                get {
                    return ((string)(this[this.tableTable_TicketDatabase.PhoneNumberColumn]));
                }
                set {
                    this[this.tableTable_TicketDatabase.PhoneNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string FullName {
                get {
                    return ((string)(this[this.tableTable_TicketDatabase.FullNameColumn]));
                }
                set {
                    this[this.tableTable_TicketDatabase.FullNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string CCCD {
                get {
                    return ((string)(this[this.tableTable_TicketDatabase.CCCDColumn]));
                }
                set {
                    this[this.tableTable_TicketDatabase.CCCDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int Status {
                get {
                    return ((int)(this[this.tableTable_TicketDatabase.StatusColumn]));
                }
                set {
                    this[this.tableTable_TicketDatabase.StatusColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public class Table_CrewDatabaseRowChangeEvent : global::System.EventArgs {
            
            private Table_CrewDatabaseRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public Table_CrewDatabaseRowChangeEvent(Table_CrewDatabaseRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public Table_CrewDatabaseRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public class Table_FlightInfoDatabaseRowChangeEvent : global::System.EventArgs {
            
            private Table_FlightInfoDatabaseRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public Table_FlightInfoDatabaseRowChangeEvent(Table_FlightInfoDatabaseRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public Table_FlightInfoDatabaseRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public class Table_TicketDatabaseRowChangeEvent : global::System.EventArgs {
            
            private Table_TicketDatabaseRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public Table_TicketDatabaseRowChangeEvent(Table_TicketDatabaseRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public Table_TicketDatabaseRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace Presentation.SkylineDataSetTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class Table_CrewDatabaseTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public Table_CrewDatabaseTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Table_CrewDatabase";
            tableMapping.ColumnMappings.Add("PersonID", "PersonID");
            tableMapping.ColumnMappings.Add("UserName", "UserName");
            tableMapping.ColumnMappings.Add("Password", "Password");
            tableMapping.ColumnMappings.Add("JobType", "JobType");
            tableMapping.ColumnMappings.Add("YearsOfExperience", "YearsOfExperience");
            tableMapping.ColumnMappings.Add("PhoneNumber", "PhoneNumber");
            tableMapping.ColumnMappings.Add("FullName", "FullName");
            tableMapping.ColumnMappings.Add("CCCD", "CCCD");
            tableMapping.ColumnMappings.Add("Status", "Status");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[Table_CrewDatabase] WHERE (([PersonID] = @Original_PersonID) AND ([UserName] = @Original_UserName) AND ([Password] = @Original_Password) AND ([JobType] = @Original_JobType) AND ([YearsOfExperience] = @Original_YearsOfExperience) AND ([PhoneNumber] = @Original_PhoneNumber) AND ([FullName] = @Original_FullName) AND ([CCCD] = @Original_CCCD) AND ([Status] = @Original_Status))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PersonID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PersonID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UserName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UserName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Password", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Password", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_JobType", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JobType", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_YearsOfExperience", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "YearsOfExperience", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PhoneNumber", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PhoneNumber", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FullName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FullName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CCCD", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CCCD", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Status", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Status", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[Table_CrewDatabase] ([UserName], [Password], [JobType], [YearsOfExperience], [PhoneNumber], [FullName], [CCCD], [Status]) VALUES (@UserName, @Password, @JobType, @YearsOfExperience, @PhoneNumber, @FullName, @CCCD, @Status);
SELECT PersonID, UserName, Password, JobType, YearsOfExperience, PhoneNumber, FullName, CCCD, Status FROM Table_CrewDatabase WHERE (PersonID = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UserName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UserName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Password", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Password", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@JobType", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JobType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@YearsOfExperience", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "YearsOfExperience", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PhoneNumber", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PhoneNumber", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FullName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FullName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CCCD", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CCCD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Status", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Status", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[Table_CrewDatabase] SET [UserName] = @UserName, [Password] = @Password, [JobType] = @JobType, [YearsOfExperience] = @YearsOfExperience, [PhoneNumber] = @PhoneNumber, [FullName] = @FullName, [CCCD] = @CCCD, [Status] = @Status WHERE (([PersonID] = @Original_PersonID) AND ([UserName] = @Original_UserName) AND ([Password] = @Original_Password) AND ([JobType] = @Original_JobType) AND ([YearsOfExperience] = @Original_YearsOfExperience) AND ([PhoneNumber] = @Original_PhoneNumber) AND ([FullName] = @Original_FullName) AND ([CCCD] = @Original_CCCD) AND ([Status] = @Original_Status));
SELECT PersonID, UserName, Password, JobType, YearsOfExperience, PhoneNumber, FullName, CCCD, Status FROM Table_CrewDatabase WHERE (PersonID = @PersonID)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UserName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UserName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Password", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Password", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@JobType", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JobType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@YearsOfExperience", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "YearsOfExperience", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PhoneNumber", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PhoneNumber", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FullName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FullName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CCCD", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CCCD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Status", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Status", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PersonID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PersonID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UserName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UserName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Password", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Password", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_JobType", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JobType", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_YearsOfExperience", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "YearsOfExperience", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PhoneNumber", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PhoneNumber", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FullName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FullName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CCCD", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CCCD", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Status", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Status", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PersonID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "PersonID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Presentation.Properties.Settings.Default.SkylineConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT PersonID, UserName, Password, JobType, YearsOfExperience, PhoneNumber, Ful" +
                "lName, CCCD, Status FROM dbo.Table_CrewDatabase";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(SkylineDataSet.Table_CrewDatabaseDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual SkylineDataSet.Table_CrewDatabaseDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            SkylineDataSet.Table_CrewDatabaseDataTable dataTable = new SkylineDataSet.Table_CrewDatabaseDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(SkylineDataSet.Table_CrewDatabaseDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(SkylineDataSet dataSet) {
            return this.Adapter.Update(dataSet, "Table_CrewDatabase");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_PersonID, string Original_UserName, string Original_Password, string Original_JobType, int Original_YearsOfExperience, string Original_PhoneNumber, string Original_FullName, string Original_CCCD, int Original_Status) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_PersonID));
            if ((Original_UserName == null)) {
                throw new global::System.ArgumentNullException("Original_UserName");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_UserName));
            }
            if ((Original_Password == null)) {
                throw new global::System.ArgumentNullException("Original_Password");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_Password));
            }
            if ((Original_JobType == null)) {
                throw new global::System.ArgumentNullException("Original_JobType");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_JobType));
            }
            this.Adapter.DeleteCommand.Parameters[4].Value = ((int)(Original_YearsOfExperience));
            if ((Original_PhoneNumber == null)) {
                throw new global::System.ArgumentNullException("Original_PhoneNumber");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_PhoneNumber));
            }
            if ((Original_FullName == null)) {
                throw new global::System.ArgumentNullException("Original_FullName");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_FullName));
            }
            if ((Original_CCCD == null)) {
                throw new global::System.ArgumentNullException("Original_CCCD");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_CCCD));
            }
            this.Adapter.DeleteCommand.Parameters[8].Value = ((int)(Original_Status));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string UserName, string Password, string JobType, int YearsOfExperience, string PhoneNumber, string FullName, string CCCD, int Status) {
            if ((UserName == null)) {
                throw new global::System.ArgumentNullException("UserName");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(UserName));
            }
            if ((Password == null)) {
                throw new global::System.ArgumentNullException("Password");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(Password));
            }
            if ((JobType == null)) {
                throw new global::System.ArgumentNullException("JobType");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(JobType));
            }
            this.Adapter.InsertCommand.Parameters[3].Value = ((int)(YearsOfExperience));
            if ((PhoneNumber == null)) {
                throw new global::System.ArgumentNullException("PhoneNumber");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(PhoneNumber));
            }
            if ((FullName == null)) {
                throw new global::System.ArgumentNullException("FullName");
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(FullName));
            }
            if ((CCCD == null)) {
                throw new global::System.ArgumentNullException("CCCD");
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(CCCD));
            }
            this.Adapter.InsertCommand.Parameters[7].Value = ((int)(Status));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string UserName, 
                    string Password, 
                    string JobType, 
                    int YearsOfExperience, 
                    string PhoneNumber, 
                    string FullName, 
                    string CCCD, 
                    int Status, 
                    int Original_PersonID, 
                    string Original_UserName, 
                    string Original_Password, 
                    string Original_JobType, 
                    int Original_YearsOfExperience, 
                    string Original_PhoneNumber, 
                    string Original_FullName, 
                    string Original_CCCD, 
                    int Original_Status, 
                    int PersonID) {
            if ((UserName == null)) {
                throw new global::System.ArgumentNullException("UserName");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(UserName));
            }
            if ((Password == null)) {
                throw new global::System.ArgumentNullException("Password");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(Password));
            }
            if ((JobType == null)) {
                throw new global::System.ArgumentNullException("JobType");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(JobType));
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(YearsOfExperience));
            if ((PhoneNumber == null)) {
                throw new global::System.ArgumentNullException("PhoneNumber");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(PhoneNumber));
            }
            if ((FullName == null)) {
                throw new global::System.ArgumentNullException("FullName");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(FullName));
            }
            if ((CCCD == null)) {
                throw new global::System.ArgumentNullException("CCCD");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(CCCD));
            }
            this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(Status));
            this.Adapter.UpdateCommand.Parameters[8].Value = ((int)(Original_PersonID));
            if ((Original_UserName == null)) {
                throw new global::System.ArgumentNullException("Original_UserName");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Original_UserName));
            }
            if ((Original_Password == null)) {
                throw new global::System.ArgumentNullException("Original_Password");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(Original_Password));
            }
            if ((Original_JobType == null)) {
                throw new global::System.ArgumentNullException("Original_JobType");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Original_JobType));
            }
            this.Adapter.UpdateCommand.Parameters[12].Value = ((int)(Original_YearsOfExperience));
            if ((Original_PhoneNumber == null)) {
                throw new global::System.ArgumentNullException("Original_PhoneNumber");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(Original_PhoneNumber));
            }
            if ((Original_FullName == null)) {
                throw new global::System.ArgumentNullException("Original_FullName");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(Original_FullName));
            }
            if ((Original_CCCD == null)) {
                throw new global::System.ArgumentNullException("Original_CCCD");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(Original_CCCD));
            }
            this.Adapter.UpdateCommand.Parameters[16].Value = ((int)(Original_Status));
            this.Adapter.UpdateCommand.Parameters[17].Value = ((int)(PersonID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string UserName, 
                    string Password, 
                    string JobType, 
                    int YearsOfExperience, 
                    string PhoneNumber, 
                    string FullName, 
                    string CCCD, 
                    int Status, 
                    int Original_PersonID, 
                    string Original_UserName, 
                    string Original_Password, 
                    string Original_JobType, 
                    int Original_YearsOfExperience, 
                    string Original_PhoneNumber, 
                    string Original_FullName, 
                    string Original_CCCD, 
                    int Original_Status) {
            return this.Update(UserName, Password, JobType, YearsOfExperience, PhoneNumber, FullName, CCCD, Status, Original_PersonID, Original_UserName, Original_Password, Original_JobType, Original_YearsOfExperience, Original_PhoneNumber, Original_FullName, Original_CCCD, Original_Status, Original_PersonID);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class Table_FlightInfoDatabaseTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public Table_FlightInfoDatabaseTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Table_FlightInfoDatabase";
            tableMapping.ColumnMappings.Add("FlightID", "FlightID");
            tableMapping.ColumnMappings.Add("FlightNumber", "FlightNumber");
            tableMapping.ColumnMappings.Add("Airline", "Airline");
            tableMapping.ColumnMappings.Add("DepartCode", "DepartCode");
            tableMapping.ColumnMappings.Add("ArriveCode", "ArriveCode");
            tableMapping.ColumnMappings.Add("DepartureDate", "DepartureDate");
            tableMapping.ColumnMappings.Add("ArrivalDate", "ArrivalDate");
            tableMapping.ColumnMappings.Add("PilotID", "PilotID");
            tableMapping.ColumnMappings.Add("PilotName", "PilotName");
            tableMapping.ColumnMappings.Add("CoPilotID", "CoPilotID");
            tableMapping.ColumnMappings.Add("CoPilotName", "CoPilotName");
            tableMapping.ColumnMappings.Add("AttendantID", "AttendantID");
            tableMapping.ColumnMappings.Add("AttendantName", "AttendantName");
            tableMapping.ColumnMappings.Add("PassengerCount", "PassengerCount");
            tableMapping.ColumnMappings.Add("G1", "G1");
            tableMapping.ColumnMappings.Add("G2", "G2");
            tableMapping.ColumnMappings.Add("G3", "G3");
            tableMapping.ColumnMappings.Add("G4", "G4");
            tableMapping.ColumnMappings.Add("G5", "G5");
            tableMapping.ColumnMappings.Add("G6", "G6");
            tableMapping.ColumnMappings.Add("G7", "G7");
            tableMapping.ColumnMappings.Add("G8", "G8");
            tableMapping.ColumnMappings.Add("G9", "G9");
            tableMapping.ColumnMappings.Add("G10", "G10");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[Table_FlightInfoDatabase] WHERE (([FlightID] = @Original_FlightID) AND ([FlightNumber] = @Original_FlightNumber) AND ([Airline] = @Original_Airline) AND ([DepartCode] = @Original_DepartCode) AND ([ArriveCode] = @Original_ArriveCode) AND ([DepartureDate] = @Original_DepartureDate) AND ([ArrivalDate] = @Original_ArrivalDate) AND ((@IsNull_PilotID = 1 AND [PilotID] IS NULL) OR ([PilotID] = @Original_PilotID)) AND ((@IsNull_PilotName = 1 AND [PilotName] IS NULL) OR ([PilotName] = @Original_PilotName)) AND ((@IsNull_CoPilotID = 1 AND [CoPilotID] IS NULL) OR ([CoPilotID] = @Original_CoPilotID)) AND ((@IsNull_CoPilotName = 1 AND [CoPilotName] IS NULL) OR ([CoPilotName] = @Original_CoPilotName)) AND ((@IsNull_AttendantID = 1 AND [AttendantID] IS NULL) OR ([AttendantID] = @Original_AttendantID)) AND ((@IsNull_AttendantName = 1 AND [AttendantName] IS NULL) OR ([AttendantName] = @Original_AttendantName)) AND ([PassengerCount] = @Original_PassengerCount) AND ([G1] = @Original_G1) AND ([G2] = @Original_G2) AND ([G3] = @Original_G3) AND ([G4] = @Original_G4) AND ([G5] = @Original_G5) AND ([G6] = @Original_G6) AND ([G7] = @Original_G7) AND ([G8] = @Original_G8) AND ([G9] = @Original_G9) AND ([G10] = @Original_G10))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FlightID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FlightID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FlightNumber", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FlightNumber", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Airline", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Airline", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DepartCode", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DepartCode", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ArriveCode", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ArriveCode", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DepartureDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DepartureDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ArrivalDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ArrivalDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PilotID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PilotID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PilotID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PilotID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PilotName", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PilotName", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PilotName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PilotName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CoPilotID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CoPilotID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CoPilotID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CoPilotID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CoPilotName", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CoPilotName", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CoPilotName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CoPilotName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_AttendantID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AttendantID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AttendantID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AttendantID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_AttendantName", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AttendantName", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AttendantName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AttendantName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PassengerCount", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PassengerCount", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_G1", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "G1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_G2", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "G2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_G3", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "G3", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_G4", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "G4", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_G5", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "G5", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_G6", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "G6", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_G7", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "G7", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_G8", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "G8", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_G9", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "G9", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_G10", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "G10", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[Table_FlightInfoDatabase] ([FlightNumber], [Airline], [DepartCode], [ArriveCode], [DepartureDate], [ArrivalDate], [PilotID], [PilotName], [CoPilotID], [CoPilotName], [AttendantID], [AttendantName], [PassengerCount], [G1], [G2], [G3], [G4], [G5], [G6], [G7], [G8], [G9], [G10]) VALUES (@FlightNumber, @Airline, @DepartCode, @ArriveCode, @DepartureDate, @ArrivalDate, @PilotID, @PilotName, @CoPilotID, @CoPilotName, @AttendantID, @AttendantName, @PassengerCount, @G1, @G2, @G3, @G4, @G5, @G6, @G7, @G8, @G9, @G10);
SELECT FlightID, FlightNumber, Airline, DepartCode, ArriveCode, DepartureDate, ArrivalDate, PilotID, PilotName, CoPilotID, CoPilotName, AttendantID, AttendantName, PassengerCount, G1, G2, G3, G4, G5, G6, G7, G8, G9, G10 FROM Table_FlightInfoDatabase WHERE (FlightID = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FlightNumber", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FlightNumber", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Airline", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Airline", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DepartCode", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DepartCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ArriveCode", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ArriveCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DepartureDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DepartureDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ArrivalDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ArrivalDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PilotID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PilotID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PilotName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PilotName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CoPilotID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CoPilotID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CoPilotName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CoPilotName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AttendantID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AttendantID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AttendantName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AttendantName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PassengerCount", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PassengerCount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@G1", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "G1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@G2", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "G2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@G3", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "G3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@G4", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "G4", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@G5", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "G5", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@G6", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "G6", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@G7", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "G7", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@G8", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "G8", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@G9", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "G9", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@G10", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "G10", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[Table_FlightInfoDatabase] SET [FlightNumber] = @FlightNumber, [Airl" +
                "ine] = @Airline, [DepartCode] = @DepartCode, [ArriveCode] = @ArriveCode, [Depart" +
                "ureDate] = @DepartureDate, [ArrivalDate] = @ArrivalDate, [PilotID] = @PilotID, [" +
                "PilotName] = @PilotName, [CoPilotID] = @CoPilotID, [CoPilotName] = @CoPilotName," +
                " [AttendantID] = @AttendantID, [AttendantName] = @AttendantName, [PassengerCount" +
                "] = @PassengerCount, [G1] = @G1, [G2] = @G2, [G3] = @G3, [G4] = @G4, [G5] = @G5," +
                " [G6] = @G6, [G7] = @G7, [G8] = @G8, [G9] = @G9, [G10] = @G10 WHERE (([FlightID]" +
                " = @Original_FlightID) AND ([FlightNumber] = @Original_FlightNumber) AND ([Airli" +
                "ne] = @Original_Airline) AND ([DepartCode] = @Original_DepartCode) AND ([ArriveC" +
                "ode] = @Original_ArriveCode) AND ([DepartureDate] = @Original_DepartureDate) AND" +
                " ([ArrivalDate] = @Original_ArrivalDate) AND ((@IsNull_PilotID = 1 AND [PilotID]" +
                " IS NULL) OR ([PilotID] = @Original_PilotID)) AND ((@IsNull_PilotName = 1 AND [P" +
                "ilotName] IS NULL) OR ([PilotName] = @Original_PilotName)) AND ((@IsNull_CoPilot" +
                "ID = 1 AND [CoPilotID] IS NULL) OR ([CoPilotID] = @Original_CoPilotID)) AND ((@I" +
                "sNull_CoPilotName = 1 AND [CoPilotName] IS NULL) OR ([CoPilotName] = @Original_C" +
                "oPilotName)) AND ((@IsNull_AttendantID = 1 AND [AttendantID] IS NULL) OR ([Atten" +
                "dantID] = @Original_AttendantID)) AND ((@IsNull_AttendantName = 1 AND [Attendant" +
                "Name] IS NULL) OR ([AttendantName] = @Original_AttendantName)) AND ([PassengerCo" +
                "unt] = @Original_PassengerCount) AND ([G1] = @Original_G1) AND ([G2] = @Original" +
                "_G2) AND ([G3] = @Original_G3) AND ([G4] = @Original_G4) AND ([G5] = @Original_G" +
                "5) AND ([G6] = @Original_G6) AND ([G7] = @Original_G7) AND ([G8] = @Original_G8)" +
                " AND ([G9] = @Original_G9) AND ([G10] = @Original_G10));\r\nSELECT FlightID, Fligh" +
                "tNumber, Airline, DepartCode, ArriveCode, DepartureDate, ArrivalDate, PilotID, P" +
                "ilotName, CoPilotID, CoPilotName, AttendantID, AttendantName, PassengerCount, G1" +
                ", G2, G3, G4, G5, G6, G7, G8, G9, G10 FROM Table_FlightInfoDatabase WHERE (Fligh" +
                "tID = @FlightID)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FlightNumber", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FlightNumber", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Airline", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Airline", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DepartCode", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DepartCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ArriveCode", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ArriveCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DepartureDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DepartureDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ArrivalDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ArrivalDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PilotID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PilotID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PilotName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PilotName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CoPilotID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CoPilotID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CoPilotName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CoPilotName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AttendantID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AttendantID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AttendantName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AttendantName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PassengerCount", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PassengerCount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@G1", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "G1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@G2", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "G2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@G3", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "G3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@G4", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "G4", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@G5", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "G5", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@G6", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "G6", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@G7", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "G7", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@G8", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "G8", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@G9", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "G9", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@G10", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "G10", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FlightID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FlightID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FlightNumber", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FlightNumber", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Airline", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Airline", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DepartCode", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DepartCode", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ArriveCode", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ArriveCode", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DepartureDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DepartureDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ArrivalDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ArrivalDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PilotID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PilotID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PilotID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PilotID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PilotName", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PilotName", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PilotName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PilotName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CoPilotID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CoPilotID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CoPilotID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CoPilotID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CoPilotName", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CoPilotName", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CoPilotName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CoPilotName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_AttendantID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AttendantID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AttendantID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AttendantID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_AttendantName", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AttendantName", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AttendantName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AttendantName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PassengerCount", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PassengerCount", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_G1", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "G1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_G2", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "G2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_G3", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "G3", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_G4", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "G4", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_G5", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "G5", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_G6", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "G6", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_G7", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "G7", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_G8", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "G8", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_G9", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "G9", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_G10", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "G10", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FlightID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "FlightID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Presentation.Properties.Settings.Default.SkylineConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT FlightID, FlightNumber, Airline, DepartCode, ArriveCode, DepartureDate, Ar" +
                "rivalDate, PilotID, PilotName, CoPilotID, CoPilotName, AttendantID, AttendantNam" +
                "e, PassengerCount, G1, G2, G3, G4, G5, G6, G7, G8, G9, G10 FROM dbo.Table_Flight" +
                "InfoDatabase";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(SkylineDataSet.Table_FlightInfoDatabaseDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual SkylineDataSet.Table_FlightInfoDatabaseDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            SkylineDataSet.Table_FlightInfoDatabaseDataTable dataTable = new SkylineDataSet.Table_FlightInfoDatabaseDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(SkylineDataSet.Table_FlightInfoDatabaseDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(SkylineDataSet dataSet) {
            return this.Adapter.Update(dataSet, "Table_FlightInfoDatabase");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    int Original_FlightID, 
                    string Original_FlightNumber, 
                    string Original_Airline, 
                    string Original_DepartCode, 
                    string Original_ArriveCode, 
                    System.DateTime Original_DepartureDate, 
                    System.DateTime Original_ArrivalDate, 
                    global::System.Nullable<int> Original_PilotID, 
                    string Original_PilotName, 
                    global::System.Nullable<int> Original_CoPilotID, 
                    string Original_CoPilotName, 
                    global::System.Nullable<int> Original_AttendantID, 
                    string Original_AttendantName, 
                    int Original_PassengerCount, 
                    bool Original_G1, 
                    bool Original_G2, 
                    bool Original_G3, 
                    bool Original_G4, 
                    bool Original_G5, 
                    bool Original_G6, 
                    bool Original_G7, 
                    bool Original_G8, 
                    bool Original_G9, 
                    bool Original_G10) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_FlightID));
            if ((Original_FlightNumber == null)) {
                throw new global::System.ArgumentNullException("Original_FlightNumber");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_FlightNumber));
            }
            if ((Original_Airline == null)) {
                throw new global::System.ArgumentNullException("Original_Airline");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_Airline));
            }
            if ((Original_DepartCode == null)) {
                throw new global::System.ArgumentNullException("Original_DepartCode");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_DepartCode));
            }
            if ((Original_ArriveCode == null)) {
                throw new global::System.ArgumentNullException("Original_ArriveCode");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_ArriveCode));
            }
            this.Adapter.DeleteCommand.Parameters[5].Value = ((System.DateTime)(Original_DepartureDate));
            this.Adapter.DeleteCommand.Parameters[6].Value = ((System.DateTime)(Original_ArrivalDate));
            if ((Original_PilotID.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((int)(Original_PilotID.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((Original_PilotName == null)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_PilotName));
            }
            if ((Original_CoPilotID.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((int)(Original_CoPilotID.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((Original_CoPilotName == null)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((string)(Original_CoPilotName));
            }
            if ((Original_AttendantID.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[16].Value = ((int)(Original_AttendantID.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((Original_AttendantName == null)) {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[18].Value = ((string)(Original_AttendantName));
            }
            this.Adapter.DeleteCommand.Parameters[19].Value = ((int)(Original_PassengerCount));
            this.Adapter.DeleteCommand.Parameters[20].Value = ((bool)(Original_G1));
            this.Adapter.DeleteCommand.Parameters[21].Value = ((bool)(Original_G2));
            this.Adapter.DeleteCommand.Parameters[22].Value = ((bool)(Original_G3));
            this.Adapter.DeleteCommand.Parameters[23].Value = ((bool)(Original_G4));
            this.Adapter.DeleteCommand.Parameters[24].Value = ((bool)(Original_G5));
            this.Adapter.DeleteCommand.Parameters[25].Value = ((bool)(Original_G6));
            this.Adapter.DeleteCommand.Parameters[26].Value = ((bool)(Original_G7));
            this.Adapter.DeleteCommand.Parameters[27].Value = ((bool)(Original_G8));
            this.Adapter.DeleteCommand.Parameters[28].Value = ((bool)(Original_G9));
            this.Adapter.DeleteCommand.Parameters[29].Value = ((bool)(Original_G10));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    string FlightNumber, 
                    string Airline, 
                    string DepartCode, 
                    string ArriveCode, 
                    System.DateTime DepartureDate, 
                    System.DateTime ArrivalDate, 
                    global::System.Nullable<int> PilotID, 
                    string PilotName, 
                    global::System.Nullable<int> CoPilotID, 
                    string CoPilotName, 
                    global::System.Nullable<int> AttendantID, 
                    string AttendantName, 
                    int PassengerCount, 
                    bool G1, 
                    bool G2, 
                    bool G3, 
                    bool G4, 
                    bool G5, 
                    bool G6, 
                    bool G7, 
                    bool G8, 
                    bool G9, 
                    bool G10) {
            if ((FlightNumber == null)) {
                throw new global::System.ArgumentNullException("FlightNumber");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(FlightNumber));
            }
            if ((Airline == null)) {
                throw new global::System.ArgumentNullException("Airline");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(Airline));
            }
            if ((DepartCode == null)) {
                throw new global::System.ArgumentNullException("DepartCode");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(DepartCode));
            }
            if ((ArriveCode == null)) {
                throw new global::System.ArgumentNullException("ArriveCode");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(ArriveCode));
            }
            this.Adapter.InsertCommand.Parameters[4].Value = ((System.DateTime)(DepartureDate));
            this.Adapter.InsertCommand.Parameters[5].Value = ((System.DateTime)(ArrivalDate));
            if ((PilotID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((int)(PilotID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((PilotName == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(PilotName));
            }
            if ((CoPilotID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[8].Value = ((int)(CoPilotID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((CoPilotName == null)) {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(CoPilotName));
            }
            if ((AttendantID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[10].Value = ((int)(AttendantID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((AttendantName == null)) {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(AttendantName));
            }
            this.Adapter.InsertCommand.Parameters[12].Value = ((int)(PassengerCount));
            this.Adapter.InsertCommand.Parameters[13].Value = ((bool)(G1));
            this.Adapter.InsertCommand.Parameters[14].Value = ((bool)(G2));
            this.Adapter.InsertCommand.Parameters[15].Value = ((bool)(G3));
            this.Adapter.InsertCommand.Parameters[16].Value = ((bool)(G4));
            this.Adapter.InsertCommand.Parameters[17].Value = ((bool)(G5));
            this.Adapter.InsertCommand.Parameters[18].Value = ((bool)(G6));
            this.Adapter.InsertCommand.Parameters[19].Value = ((bool)(G7));
            this.Adapter.InsertCommand.Parameters[20].Value = ((bool)(G8));
            this.Adapter.InsertCommand.Parameters[21].Value = ((bool)(G9));
            this.Adapter.InsertCommand.Parameters[22].Value = ((bool)(G10));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string FlightNumber, 
                    string Airline, 
                    string DepartCode, 
                    string ArriveCode, 
                    System.DateTime DepartureDate, 
                    System.DateTime ArrivalDate, 
                    global::System.Nullable<int> PilotID, 
                    string PilotName, 
                    global::System.Nullable<int> CoPilotID, 
                    string CoPilotName, 
                    global::System.Nullable<int> AttendantID, 
                    string AttendantName, 
                    int PassengerCount, 
                    bool G1, 
                    bool G2, 
                    bool G3, 
                    bool G4, 
                    bool G5, 
                    bool G6, 
                    bool G7, 
                    bool G8, 
                    bool G9, 
                    bool G10, 
                    int Original_FlightID, 
                    string Original_FlightNumber, 
                    string Original_Airline, 
                    string Original_DepartCode, 
                    string Original_ArriveCode, 
                    System.DateTime Original_DepartureDate, 
                    System.DateTime Original_ArrivalDate, 
                    global::System.Nullable<int> Original_PilotID, 
                    string Original_PilotName, 
                    global::System.Nullable<int> Original_CoPilotID, 
                    string Original_CoPilotName, 
                    global::System.Nullable<int> Original_AttendantID, 
                    string Original_AttendantName, 
                    int Original_PassengerCount, 
                    bool Original_G1, 
                    bool Original_G2, 
                    bool Original_G3, 
                    bool Original_G4, 
                    bool Original_G5, 
                    bool Original_G6, 
                    bool Original_G7, 
                    bool Original_G8, 
                    bool Original_G9, 
                    bool Original_G10, 
                    int FlightID) {
            if ((FlightNumber == null)) {
                throw new global::System.ArgumentNullException("FlightNumber");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(FlightNumber));
            }
            if ((Airline == null)) {
                throw new global::System.ArgumentNullException("Airline");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(Airline));
            }
            if ((DepartCode == null)) {
                throw new global::System.ArgumentNullException("DepartCode");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(DepartCode));
            }
            if ((ArriveCode == null)) {
                throw new global::System.ArgumentNullException("ArriveCode");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(ArriveCode));
            }
            this.Adapter.UpdateCommand.Parameters[4].Value = ((System.DateTime)(DepartureDate));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((System.DateTime)(ArrivalDate));
            if ((PilotID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(PilotID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((PilotName == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(PilotName));
            }
            if ((CoPilotID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((int)(CoPilotID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((CoPilotName == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(CoPilotName));
            }
            if ((AttendantID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((int)(AttendantID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((AttendantName == null)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(AttendantName));
            }
            this.Adapter.UpdateCommand.Parameters[12].Value = ((int)(PassengerCount));
            this.Adapter.UpdateCommand.Parameters[13].Value = ((bool)(G1));
            this.Adapter.UpdateCommand.Parameters[14].Value = ((bool)(G2));
            this.Adapter.UpdateCommand.Parameters[15].Value = ((bool)(G3));
            this.Adapter.UpdateCommand.Parameters[16].Value = ((bool)(G4));
            this.Adapter.UpdateCommand.Parameters[17].Value = ((bool)(G5));
            this.Adapter.UpdateCommand.Parameters[18].Value = ((bool)(G6));
            this.Adapter.UpdateCommand.Parameters[19].Value = ((bool)(G7));
            this.Adapter.UpdateCommand.Parameters[20].Value = ((bool)(G8));
            this.Adapter.UpdateCommand.Parameters[21].Value = ((bool)(G9));
            this.Adapter.UpdateCommand.Parameters[22].Value = ((bool)(G10));
            this.Adapter.UpdateCommand.Parameters[23].Value = ((int)(Original_FlightID));
            if ((Original_FlightNumber == null)) {
                throw new global::System.ArgumentNullException("Original_FlightNumber");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((string)(Original_FlightNumber));
            }
            if ((Original_Airline == null)) {
                throw new global::System.ArgumentNullException("Original_Airline");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((string)(Original_Airline));
            }
            if ((Original_DepartCode == null)) {
                throw new global::System.ArgumentNullException("Original_DepartCode");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((string)(Original_DepartCode));
            }
            if ((Original_ArriveCode == null)) {
                throw new global::System.ArgumentNullException("Original_ArriveCode");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((string)(Original_ArriveCode));
            }
            this.Adapter.UpdateCommand.Parameters[28].Value = ((System.DateTime)(Original_DepartureDate));
            this.Adapter.UpdateCommand.Parameters[29].Value = ((System.DateTime)(Original_ArrivalDate));
            if ((Original_PilotID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[31].Value = ((int)(Original_PilotID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            if ((Original_PilotName == null)) {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[33].Value = ((string)(Original_PilotName));
            }
            if ((Original_CoPilotID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[35].Value = ((int)(Original_CoPilotID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            if ((Original_CoPilotName == null)) {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[37].Value = ((string)(Original_CoPilotName));
            }
            if ((Original_AttendantID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[39].Value = ((int)(Original_AttendantID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            if ((Original_AttendantName == null)) {
                this.Adapter.UpdateCommand.Parameters[40].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[40].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[41].Value = ((string)(Original_AttendantName));
            }
            this.Adapter.UpdateCommand.Parameters[42].Value = ((int)(Original_PassengerCount));
            this.Adapter.UpdateCommand.Parameters[43].Value = ((bool)(Original_G1));
            this.Adapter.UpdateCommand.Parameters[44].Value = ((bool)(Original_G2));
            this.Adapter.UpdateCommand.Parameters[45].Value = ((bool)(Original_G3));
            this.Adapter.UpdateCommand.Parameters[46].Value = ((bool)(Original_G4));
            this.Adapter.UpdateCommand.Parameters[47].Value = ((bool)(Original_G5));
            this.Adapter.UpdateCommand.Parameters[48].Value = ((bool)(Original_G6));
            this.Adapter.UpdateCommand.Parameters[49].Value = ((bool)(Original_G7));
            this.Adapter.UpdateCommand.Parameters[50].Value = ((bool)(Original_G8));
            this.Adapter.UpdateCommand.Parameters[51].Value = ((bool)(Original_G9));
            this.Adapter.UpdateCommand.Parameters[52].Value = ((bool)(Original_G10));
            this.Adapter.UpdateCommand.Parameters[53].Value = ((int)(FlightID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string FlightNumber, 
                    string Airline, 
                    string DepartCode, 
                    string ArriveCode, 
                    System.DateTime DepartureDate, 
                    System.DateTime ArrivalDate, 
                    global::System.Nullable<int> PilotID, 
                    string PilotName, 
                    global::System.Nullable<int> CoPilotID, 
                    string CoPilotName, 
                    global::System.Nullable<int> AttendantID, 
                    string AttendantName, 
                    int PassengerCount, 
                    bool G1, 
                    bool G2, 
                    bool G3, 
                    bool G4, 
                    bool G5, 
                    bool G6, 
                    bool G7, 
                    bool G8, 
                    bool G9, 
                    bool G10, 
                    int Original_FlightID, 
                    string Original_FlightNumber, 
                    string Original_Airline, 
                    string Original_DepartCode, 
                    string Original_ArriveCode, 
                    System.DateTime Original_DepartureDate, 
                    System.DateTime Original_ArrivalDate, 
                    global::System.Nullable<int> Original_PilotID, 
                    string Original_PilotName, 
                    global::System.Nullable<int> Original_CoPilotID, 
                    string Original_CoPilotName, 
                    global::System.Nullable<int> Original_AttendantID, 
                    string Original_AttendantName, 
                    int Original_PassengerCount, 
                    bool Original_G1, 
                    bool Original_G2, 
                    bool Original_G3, 
                    bool Original_G4, 
                    bool Original_G5, 
                    bool Original_G6, 
                    bool Original_G7, 
                    bool Original_G8, 
                    bool Original_G9, 
                    bool Original_G10) {
            return this.Update(FlightNumber, Airline, DepartCode, ArriveCode, DepartureDate, ArrivalDate, PilotID, PilotName, CoPilotID, CoPilotName, AttendantID, AttendantName, PassengerCount, G1, G2, G3, G4, G5, G6, G7, G8, G9, G10, Original_FlightID, Original_FlightNumber, Original_Airline, Original_DepartCode, Original_ArriveCode, Original_DepartureDate, Original_ArrivalDate, Original_PilotID, Original_PilotName, Original_CoPilotID, Original_CoPilotName, Original_AttendantID, Original_AttendantName, Original_PassengerCount, Original_G1, Original_G2, Original_G3, Original_G4, Original_G5, Original_G6, Original_G7, Original_G8, Original_G9, Original_G10, Original_FlightID);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class Table_TicketDatabaseTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public Table_TicketDatabaseTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Table_TicketDatabase";
            tableMapping.ColumnMappings.Add("TicketID", "TicketID");
            tableMapping.ColumnMappings.Add("FlightNumber", "FlightNumber");
            tableMapping.ColumnMappings.Add("Airline", "Airline");
            tableMapping.ColumnMappings.Add("DepartCode", "DepartCode");
            tableMapping.ColumnMappings.Add("ArriveCode", "ArriveCode");
            tableMapping.ColumnMappings.Add("DepartureDate", "DepartureDate");
            tableMapping.ColumnMappings.Add("ArrivalDate", "ArrivalDate");
            tableMapping.ColumnMappings.Add("ClassType", "ClassType");
            tableMapping.ColumnMappings.Add("SeatNumber", "SeatNumber");
            tableMapping.ColumnMappings.Add("Price", "Price");
            tableMapping.ColumnMappings.Add("PhoneNumber", "PhoneNumber");
            tableMapping.ColumnMappings.Add("FullName", "FullName");
            tableMapping.ColumnMappings.Add("CCCD", "CCCD");
            tableMapping.ColumnMappings.Add("Status", "Status");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[Table_TicketDatabase] WHERE (([TicketID] = @Original_TicketID) AND ([FlightNumber] = @Original_FlightNumber) AND ([Airline] = @Original_Airline) AND ([DepartCode] = @Original_DepartCode) AND ([ArriveCode] = @Original_ArriveCode) AND ([DepartureDate] = @Original_DepartureDate) AND ([ArrivalDate] = @Original_ArrivalDate) AND ([ClassType] = @Original_ClassType) AND ([SeatNumber] = @Original_SeatNumber) AND ([Price] = @Original_Price) AND ([PhoneNumber] = @Original_PhoneNumber) AND ([FullName] = @Original_FullName) AND ([CCCD] = @Original_CCCD) AND ([Status] = @Original_Status))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TicketID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TicketID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FlightNumber", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FlightNumber", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Airline", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Airline", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DepartCode", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DepartCode", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ArriveCode", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ArriveCode", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DepartureDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DepartureDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ArrivalDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ArrivalDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ClassType", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ClassType", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SeatNumber", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SeatNumber", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Price", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Price", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PhoneNumber", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PhoneNumber", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FullName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FullName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CCCD", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CCCD", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Status", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Status", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[Table_TicketDatabase] ([FlightNumber], [Airline], [DepartCode], [ArriveCode], [DepartureDate], [ArrivalDate], [ClassType], [SeatNumber], [Price], [PhoneNumber], [FullName], [CCCD], [Status]) VALUES (@FlightNumber, @Airline, @DepartCode, @ArriveCode, @DepartureDate, @ArrivalDate, @ClassType, @SeatNumber, @Price, @PhoneNumber, @FullName, @CCCD, @Status);
SELECT TicketID, FlightNumber, Airline, DepartCode, ArriveCode, DepartureDate, ArrivalDate, ClassType, SeatNumber, Price, PhoneNumber, FullName, CCCD, Status FROM Table_TicketDatabase WHERE (TicketID = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FlightNumber", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FlightNumber", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Airline", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Airline", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DepartCode", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DepartCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ArriveCode", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ArriveCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DepartureDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DepartureDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ArrivalDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ArrivalDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ClassType", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ClassType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SeatNumber", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SeatNumber", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Price", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Price", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PhoneNumber", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PhoneNumber", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FullName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FullName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CCCD", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CCCD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Status", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Status", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[Table_TicketDatabase] SET [FlightNumber] = @FlightNumber, [Airline] = @Airline, [DepartCode] = @DepartCode, [ArriveCode] = @ArriveCode, [DepartureDate] = @DepartureDate, [ArrivalDate] = @ArrivalDate, [ClassType] = @ClassType, [SeatNumber] = @SeatNumber, [Price] = @Price, [PhoneNumber] = @PhoneNumber, [FullName] = @FullName, [CCCD] = @CCCD, [Status] = @Status WHERE (([TicketID] = @Original_TicketID) AND ([FlightNumber] = @Original_FlightNumber) AND ([Airline] = @Original_Airline) AND ([DepartCode] = @Original_DepartCode) AND ([ArriveCode] = @Original_ArriveCode) AND ([DepartureDate] = @Original_DepartureDate) AND ([ArrivalDate] = @Original_ArrivalDate) AND ([ClassType] = @Original_ClassType) AND ([SeatNumber] = @Original_SeatNumber) AND ([Price] = @Original_Price) AND ([PhoneNumber] = @Original_PhoneNumber) AND ([FullName] = @Original_FullName) AND ([CCCD] = @Original_CCCD) AND ([Status] = @Original_Status));
SELECT TicketID, FlightNumber, Airline, DepartCode, ArriveCode, DepartureDate, ArrivalDate, ClassType, SeatNumber, Price, PhoneNumber, FullName, CCCD, Status FROM Table_TicketDatabase WHERE (TicketID = @TicketID)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FlightNumber", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FlightNumber", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Airline", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Airline", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DepartCode", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DepartCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ArriveCode", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ArriveCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DepartureDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DepartureDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ArrivalDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ArrivalDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ClassType", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ClassType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SeatNumber", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SeatNumber", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Price", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Price", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PhoneNumber", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PhoneNumber", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FullName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FullName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CCCD", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CCCD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Status", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Status", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TicketID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TicketID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FlightNumber", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FlightNumber", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Airline", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Airline", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DepartCode", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DepartCode", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ArriveCode", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ArriveCode", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DepartureDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DepartureDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ArrivalDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ArrivalDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ClassType", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ClassType", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SeatNumber", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SeatNumber", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Price", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Price", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PhoneNumber", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PhoneNumber", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FullName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FullName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CCCD", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CCCD", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Status", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Status", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TicketID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "TicketID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Presentation.Properties.Settings.Default.SkylineConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT TicketID, FlightNumber, Airline, DepartCode, ArriveCode, DepartureDate, Ar" +
                "rivalDate, ClassType, SeatNumber, Price, PhoneNumber, FullName, CCCD, Status FRO" +
                "M dbo.Table_TicketDatabase";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(SkylineDataSet.Table_TicketDatabaseDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual SkylineDataSet.Table_TicketDatabaseDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            SkylineDataSet.Table_TicketDatabaseDataTable dataTable = new SkylineDataSet.Table_TicketDatabaseDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(SkylineDataSet.Table_TicketDatabaseDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(SkylineDataSet dataSet) {
            return this.Adapter.Update(dataSet, "Table_TicketDatabase");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_TicketID, string Original_FlightNumber, string Original_Airline, string Original_DepartCode, string Original_ArriveCode, System.DateTime Original_DepartureDate, System.DateTime Original_ArrivalDate, string Original_ClassType, string Original_SeatNumber, int Original_Price, string Original_PhoneNumber, string Original_FullName, string Original_CCCD, int Original_Status) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_TicketID));
            if ((Original_FlightNumber == null)) {
                throw new global::System.ArgumentNullException("Original_FlightNumber");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_FlightNumber));
            }
            if ((Original_Airline == null)) {
                throw new global::System.ArgumentNullException("Original_Airline");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_Airline));
            }
            if ((Original_DepartCode == null)) {
                throw new global::System.ArgumentNullException("Original_DepartCode");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_DepartCode));
            }
            if ((Original_ArriveCode == null)) {
                throw new global::System.ArgumentNullException("Original_ArriveCode");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_ArriveCode));
            }
            this.Adapter.DeleteCommand.Parameters[5].Value = ((System.DateTime)(Original_DepartureDate));
            this.Adapter.DeleteCommand.Parameters[6].Value = ((System.DateTime)(Original_ArrivalDate));
            if ((Original_ClassType == null)) {
                throw new global::System.ArgumentNullException("Original_ClassType");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_ClassType));
            }
            if ((Original_SeatNumber == null)) {
                throw new global::System.ArgumentNullException("Original_SeatNumber");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_SeatNumber));
            }
            this.Adapter.DeleteCommand.Parameters[9].Value = ((int)(Original_Price));
            if ((Original_PhoneNumber == null)) {
                throw new global::System.ArgumentNullException("Original_PhoneNumber");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_PhoneNumber));
            }
            if ((Original_FullName == null)) {
                throw new global::System.ArgumentNullException("Original_FullName");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((string)(Original_FullName));
            }
            if ((Original_CCCD == null)) {
                throw new global::System.ArgumentNullException("Original_CCCD");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((string)(Original_CCCD));
            }
            this.Adapter.DeleteCommand.Parameters[13].Value = ((int)(Original_Status));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string FlightNumber, string Airline, string DepartCode, string ArriveCode, System.DateTime DepartureDate, System.DateTime ArrivalDate, string ClassType, string SeatNumber, int Price, string PhoneNumber, string FullName, string CCCD, int Status) {
            if ((FlightNumber == null)) {
                throw new global::System.ArgumentNullException("FlightNumber");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(FlightNumber));
            }
            if ((Airline == null)) {
                throw new global::System.ArgumentNullException("Airline");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(Airline));
            }
            if ((DepartCode == null)) {
                throw new global::System.ArgumentNullException("DepartCode");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(DepartCode));
            }
            if ((ArriveCode == null)) {
                throw new global::System.ArgumentNullException("ArriveCode");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(ArriveCode));
            }
            this.Adapter.InsertCommand.Parameters[4].Value = ((System.DateTime)(DepartureDate));
            this.Adapter.InsertCommand.Parameters[5].Value = ((System.DateTime)(ArrivalDate));
            if ((ClassType == null)) {
                throw new global::System.ArgumentNullException("ClassType");
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(ClassType));
            }
            if ((SeatNumber == null)) {
                throw new global::System.ArgumentNullException("SeatNumber");
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(SeatNumber));
            }
            this.Adapter.InsertCommand.Parameters[8].Value = ((int)(Price));
            if ((PhoneNumber == null)) {
                throw new global::System.ArgumentNullException("PhoneNumber");
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(PhoneNumber));
            }
            if ((FullName == null)) {
                throw new global::System.ArgumentNullException("FullName");
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(FullName));
            }
            if ((CCCD == null)) {
                throw new global::System.ArgumentNullException("CCCD");
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(CCCD));
            }
            this.Adapter.InsertCommand.Parameters[12].Value = ((int)(Status));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string FlightNumber, 
                    string Airline, 
                    string DepartCode, 
                    string ArriveCode, 
                    System.DateTime DepartureDate, 
                    System.DateTime ArrivalDate, 
                    string ClassType, 
                    string SeatNumber, 
                    int Price, 
                    string PhoneNumber, 
                    string FullName, 
                    string CCCD, 
                    int Status, 
                    int Original_TicketID, 
                    string Original_FlightNumber, 
                    string Original_Airline, 
                    string Original_DepartCode, 
                    string Original_ArriveCode, 
                    System.DateTime Original_DepartureDate, 
                    System.DateTime Original_ArrivalDate, 
                    string Original_ClassType, 
                    string Original_SeatNumber, 
                    int Original_Price, 
                    string Original_PhoneNumber, 
                    string Original_FullName, 
                    string Original_CCCD, 
                    int Original_Status, 
                    int TicketID) {
            if ((FlightNumber == null)) {
                throw new global::System.ArgumentNullException("FlightNumber");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(FlightNumber));
            }
            if ((Airline == null)) {
                throw new global::System.ArgumentNullException("Airline");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(Airline));
            }
            if ((DepartCode == null)) {
                throw new global::System.ArgumentNullException("DepartCode");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(DepartCode));
            }
            if ((ArriveCode == null)) {
                throw new global::System.ArgumentNullException("ArriveCode");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(ArriveCode));
            }
            this.Adapter.UpdateCommand.Parameters[4].Value = ((System.DateTime)(DepartureDate));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((System.DateTime)(ArrivalDate));
            if ((ClassType == null)) {
                throw new global::System.ArgumentNullException("ClassType");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(ClassType));
            }
            if ((SeatNumber == null)) {
                throw new global::System.ArgumentNullException("SeatNumber");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(SeatNumber));
            }
            this.Adapter.UpdateCommand.Parameters[8].Value = ((int)(Price));
            if ((PhoneNumber == null)) {
                throw new global::System.ArgumentNullException("PhoneNumber");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(PhoneNumber));
            }
            if ((FullName == null)) {
                throw new global::System.ArgumentNullException("FullName");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(FullName));
            }
            if ((CCCD == null)) {
                throw new global::System.ArgumentNullException("CCCD");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(CCCD));
            }
            this.Adapter.UpdateCommand.Parameters[12].Value = ((int)(Status));
            this.Adapter.UpdateCommand.Parameters[13].Value = ((int)(Original_TicketID));
            if ((Original_FlightNumber == null)) {
                throw new global::System.ArgumentNullException("Original_FlightNumber");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(Original_FlightNumber));
            }
            if ((Original_Airline == null)) {
                throw new global::System.ArgumentNullException("Original_Airline");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(Original_Airline));
            }
            if ((Original_DepartCode == null)) {
                throw new global::System.ArgumentNullException("Original_DepartCode");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(Original_DepartCode));
            }
            if ((Original_ArriveCode == null)) {
                throw new global::System.ArgumentNullException("Original_ArriveCode");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(Original_ArriveCode));
            }
            this.Adapter.UpdateCommand.Parameters[18].Value = ((System.DateTime)(Original_DepartureDate));
            this.Adapter.UpdateCommand.Parameters[19].Value = ((System.DateTime)(Original_ArrivalDate));
            if ((Original_ClassType == null)) {
                throw new global::System.ArgumentNullException("Original_ClassType");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(Original_ClassType));
            }
            if ((Original_SeatNumber == null)) {
                throw new global::System.ArgumentNullException("Original_SeatNumber");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((string)(Original_SeatNumber));
            }
            this.Adapter.UpdateCommand.Parameters[22].Value = ((int)(Original_Price));
            if ((Original_PhoneNumber == null)) {
                throw new global::System.ArgumentNullException("Original_PhoneNumber");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((string)(Original_PhoneNumber));
            }
            if ((Original_FullName == null)) {
                throw new global::System.ArgumentNullException("Original_FullName");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((string)(Original_FullName));
            }
            if ((Original_CCCD == null)) {
                throw new global::System.ArgumentNullException("Original_CCCD");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((string)(Original_CCCD));
            }
            this.Adapter.UpdateCommand.Parameters[26].Value = ((int)(Original_Status));
            this.Adapter.UpdateCommand.Parameters[27].Value = ((int)(TicketID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string FlightNumber, 
                    string Airline, 
                    string DepartCode, 
                    string ArriveCode, 
                    System.DateTime DepartureDate, 
                    System.DateTime ArrivalDate, 
                    string ClassType, 
                    string SeatNumber, 
                    int Price, 
                    string PhoneNumber, 
                    string FullName, 
                    string CCCD, 
                    int Status, 
                    int Original_TicketID, 
                    string Original_FlightNumber, 
                    string Original_Airline, 
                    string Original_DepartCode, 
                    string Original_ArriveCode, 
                    System.DateTime Original_DepartureDate, 
                    System.DateTime Original_ArrivalDate, 
                    string Original_ClassType, 
                    string Original_SeatNumber, 
                    int Original_Price, 
                    string Original_PhoneNumber, 
                    string Original_FullName, 
                    string Original_CCCD, 
                    int Original_Status) {
            return this.Update(FlightNumber, Airline, DepartCode, ArriveCode, DepartureDate, ArrivalDate, ClassType, SeatNumber, Price, PhoneNumber, FullName, CCCD, Status, Original_TicketID, Original_FlightNumber, Original_Airline, Original_DepartCode, Original_ArriveCode, Original_DepartureDate, Original_ArrivalDate, Original_ClassType, Original_SeatNumber, Original_Price, Original_PhoneNumber, Original_FullName, Original_CCCD, Original_Status, Original_TicketID);
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private Table_CrewDatabaseTableAdapter _table_CrewDatabaseTableAdapter;
        
        private Table_FlightInfoDatabaseTableAdapter _table_FlightInfoDatabaseTableAdapter;
        
        private Table_TicketDatabaseTableAdapter _table_TicketDatabaseTableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public Table_CrewDatabaseTableAdapter Table_CrewDatabaseTableAdapter {
            get {
                return this._table_CrewDatabaseTableAdapter;
            }
            set {
                this._table_CrewDatabaseTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public Table_FlightInfoDatabaseTableAdapter Table_FlightInfoDatabaseTableAdapter {
            get {
                return this._table_FlightInfoDatabaseTableAdapter;
            }
            set {
                this._table_FlightInfoDatabaseTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public Table_TicketDatabaseTableAdapter Table_TicketDatabaseTableAdapter {
            get {
                return this._table_TicketDatabaseTableAdapter;
            }
            set {
                this._table_TicketDatabaseTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._table_CrewDatabaseTableAdapter != null) 
                            && (this._table_CrewDatabaseTableAdapter.Connection != null))) {
                    return this._table_CrewDatabaseTableAdapter.Connection;
                }
                if (((this._table_FlightInfoDatabaseTableAdapter != null) 
                            && (this._table_FlightInfoDatabaseTableAdapter.Connection != null))) {
                    return this._table_FlightInfoDatabaseTableAdapter.Connection;
                }
                if (((this._table_TicketDatabaseTableAdapter != null) 
                            && (this._table_TicketDatabaseTableAdapter.Connection != null))) {
                    return this._table_TicketDatabaseTableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._table_CrewDatabaseTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._table_FlightInfoDatabaseTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._table_TicketDatabaseTableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private int UpdateUpdatedRows(SkylineDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._table_CrewDatabaseTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Table_CrewDatabase.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._table_CrewDatabaseTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._table_FlightInfoDatabaseTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Table_FlightInfoDatabase.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._table_FlightInfoDatabaseTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._table_TicketDatabaseTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Table_TicketDatabase.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._table_TicketDatabaseTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private int UpdateInsertedRows(SkylineDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._table_CrewDatabaseTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Table_CrewDatabase.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._table_CrewDatabaseTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._table_FlightInfoDatabaseTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Table_FlightInfoDatabase.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._table_FlightInfoDatabaseTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._table_TicketDatabaseTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Table_TicketDatabase.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._table_TicketDatabaseTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private int UpdateDeletedRows(SkylineDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._table_TicketDatabaseTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Table_TicketDatabase.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._table_TicketDatabaseTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._table_FlightInfoDatabaseTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Table_FlightInfoDatabase.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._table_FlightInfoDatabaseTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._table_CrewDatabaseTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Table_CrewDatabase.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._table_CrewDatabaseTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public virtual int UpdateAll(SkylineDataSet dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._table_CrewDatabaseTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._table_CrewDatabaseTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._table_FlightInfoDatabaseTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._table_FlightInfoDatabaseTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._table_TicketDatabaseTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._table_TicketDatabaseTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._table_CrewDatabaseTableAdapter != null)) {
                    revertConnections.Add(this._table_CrewDatabaseTableAdapter, this._table_CrewDatabaseTableAdapter.Connection);
                    this._table_CrewDatabaseTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._table_CrewDatabaseTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._table_CrewDatabaseTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._table_CrewDatabaseTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._table_CrewDatabaseTableAdapter.Adapter);
                    }
                }
                if ((this._table_FlightInfoDatabaseTableAdapter != null)) {
                    revertConnections.Add(this._table_FlightInfoDatabaseTableAdapter, this._table_FlightInfoDatabaseTableAdapter.Connection);
                    this._table_FlightInfoDatabaseTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._table_FlightInfoDatabaseTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._table_FlightInfoDatabaseTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._table_FlightInfoDatabaseTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._table_FlightInfoDatabaseTableAdapter.Adapter);
                    }
                }
                if ((this._table_TicketDatabaseTableAdapter != null)) {
                    revertConnections.Add(this._table_TicketDatabaseTableAdapter, this._table_TicketDatabaseTableAdapter.Connection);
                    this._table_TicketDatabaseTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._table_TicketDatabaseTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._table_TicketDatabaseTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._table_TicketDatabaseTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._table_TicketDatabaseTableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._table_CrewDatabaseTableAdapter != null)) {
                    this._table_CrewDatabaseTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._table_CrewDatabaseTableAdapter]));
                    this._table_CrewDatabaseTableAdapter.Transaction = null;
                }
                if ((this._table_FlightInfoDatabaseTableAdapter != null)) {
                    this._table_FlightInfoDatabaseTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._table_FlightInfoDatabaseTableAdapter]));
                    this._table_FlightInfoDatabaseTableAdapter.Transaction = null;
                }
                if ((this._table_TicketDatabaseTableAdapter != null)) {
                    this._table_TicketDatabaseTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._table_TicketDatabaseTableAdapter]));
                    this._table_TicketDatabaseTableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591